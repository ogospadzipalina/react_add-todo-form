{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","completed","title","userId","TodoList","todos","map","getUser","usersFromServer","find","App","useState","setTitle","setUserId","titleError","setTitleError","userError","setUserError","allTodos","setAllTodos","action","method","onSubmit","event","preventDefault","findMaxId","Math","max","htmlFor","type","value","onChange","target","placeholder","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8f4525cd.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => (\n  <article data-id={todo.id} className={`TodoInfo ${todo.completed ? 'TodoInfo--completed' : ''}`}>\n    <h2 className=\"TodoInfo__title\">{todo.title}</h2>\n    {todo.user && <UserInfo user={todo.user} key={todo.userId} />}\n  </article>\n);\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos : Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map((todo) => (<TodoInfo todo={todo} key={todo.id} />))}\n  </section>\n);\n","import { FormEventHandler, useState } from 'react';\nimport './App.scss';\n\nimport todosFromServer from './api/todos';\nimport usersFromServer from './api/users';\n\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  // if there is no user with a given userId\n  return foundUser || null;\n}\n\nexport const todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState('0');\n  const [titleError, setTitleError] = useState('');\n  const [userError, setUserError] = useState('');\n  const [allTodos, setAllTodos] = useState(todos);\n\n  const handleNewTitle: React.ChangeEventHandler<HTMLInputElement>\n  = (event) => {\n    setTitleError('');\n\n    return setTitle(event.target.value);\n  };\n\n  const handleUserChange: React.ChangeEventHandler<HTMLSelectElement>\n  = (event) => {\n    setUserError('');\n\n    return setUserId(event.target.value);\n  };\n\n  const handleSubmit: FormEventHandler = (event) => {\n    event.preventDefault();\n\n    if (!title) {\n      setTitleError('Please enter a title');\n    }\n\n    if (userId === '0') {\n      setUserError('Please choose a user');\n    }\n\n    if (title && userId !== '0') {\n      const findMaxId = Math.max(...allTodos.map(todo => todo.id), 0);\n      const todo: Todo = {\n        id: findMaxId + 1,\n        title,\n        userId: +userId,\n        completed: false,\n        user: getUser(+userId),\n      };\n\n      setAllTodos([...allTodos, todo]);\n\n      setTitle('');\n      setUserId('0');\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\">Title: </label>\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            id=\"title\"\n            value={title}\n            onChange={handleNewTitle}\n            placeholder=\"Enter a title\"\n          />\n          <span className=\"error\">{titleError}</span>\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"user\">User: </label>\n          <select\n            data-cy=\"userSelect\"\n            id=\"user\"\n            value={userId}\n            onChange={handleUserChange}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(user => (\n              <option key={user.id} value={user.id}>{user.name}</option>\n            ))}\n          </select>\n          <span className=\"error\">{userError}</span>\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <section className=\"TodoList\">\n        <TodoList todos={allTodos} />\n      </section>\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}